diff -aur afl-2.39b.orig/afl-fuzz.c afl-2.39b/afl-fuzz.c
--- afl-2.39b.orig/afl-fuzz.c	2016-11-27 10:10:23.000000000 +0800
+++ afl-2.39b/afl-fuzz.c	2017-02-25 04:10:25.113333333 +0800
@@ -89,7 +89,8 @@
           *in_bitmap,                 /* Input bitmap                     */
           *doc_path,                  /* Path to documentation dir        */
           *target_path,               /* Path to target binary            */
-          *orig_cmdline;              /* Original command line            */
+          *orig_cmdline,              /* Original command line            */
+          *qemu_lib_path;             /* Path to the lib of QEMU guest    */
 
 EXP_ST u32 exec_tmout = EXEC_TIMEOUT; /* Configurable exec timeout (ms)   */
 EXP_ST u64 mem_limit = MEM_LIMIT;     /* Memory cap for child (MB)        */
@@ -7521,13 +7522,15 @@
 
 static char** get_qemu_argv(u8* own_loc, char** argv, int argc) {
 
-  char** new_argv = ck_alloc(sizeof(char*) * (argc + 4));
+  char** new_argv = ck_alloc(sizeof(char*) * (argc + 6));
   u8 *tmp, *cp, *rsl, *own_copy;
 
-  memcpy(new_argv + 3, argv + 1, sizeof(char*) * argc);
+  memcpy(new_argv + 5, argv + 1, sizeof(char*) * argc);
 
-  new_argv[2] = target_path;
-  new_argv[1] = "--";
+  new_argv[4] = target_path;
+  new_argv[3] = "--";
+  new_argv[2] = qemu_lib_path;
+  new_argv[1] = "-L";
 
   /* Now we need to actually find the QEMU binary to put in argv[0]. */
 
@@ -7638,7 +7641,7 @@
   gettimeofday(&tv, &tz);
   srandom(tv.tv_sec ^ tv.tv_usec ^ getpid());
 
-  while ((opt = getopt(argc, argv, "+i:o:f:m:t:T:dnCB:S:M:x:Q")) > 0)
+  while ((opt = getopt(argc, argv, "+i:o:f:m:t:T:dnCB:S:M:x:QL:")) > 0)
 
     switch (opt) {
 
@@ -7806,12 +7809,20 @@
 
         break;
 
+      case 'L': /* specify the library path for QEMU mode */
+
+        if (qemu_lib_path) FATAL("Multiple -L options not supported");
+        qemu_lib_path = optarg;
+        break;
+
       default:
 
         usage(argv[0]);
 
     }
 
+  if (!qemu_mode && qemu_lib_path) FATAL("-L must be used with -Q");
+
   if (optind == argc || !in_dir || !out_dir) usage(argv[0]);
 
   setup_signal_handlers();
diff -aur afl-2.39b.orig/Makefile afl-2.39b/Makefile
--- afl-2.39b.orig/Makefile	2017-01-15 09:50:54.000000000 +0800
+++ afl-2.39b/Makefile	2017-02-25 02:56:41.573333333 +0800
@@ -122,7 +122,7 @@
 	rm -f $${DESTDIR}$(BIN_PATH)/afl-plot.sh
 	install -m 755 $(PROGS) $(SH_PROGS) $${DESTDIR}$(BIN_PATH)
 	rm -f $${DESTDIR}$(BIN_PATH)/afl-as
-	if [ -f afl-qemu-trace ]; then install -m 755 afl-qemu-trace $${DESTDIR}$(BIN_PATH); fi
+	if [ -f afl-qemu-trace ]; then install -m 755 afl-qemu-trace $${DESTDIR}$(BIN_PATH); cp -r afl-qemu-trace-* $${DESTDIR}$(BIN_PATH); fi
 ifndef AFL_TRACE_PC
 	if [ -f afl-clang-fast -a -f afl-llvm-pass.so -a -f afl-llvm-rt.o ]; then set -e; install -m 755 afl-clang-fast $${DESTDIR}$(BIN_PATH); ln -sf afl-clang-fast $${DESTDIR}$(BIN_PATH)/afl-clang-fast++; install -m 755 afl-llvm-pass.so afl-llvm-rt.o $${DESTDIR}$(HELPER_PATH); fi
 else
diff -aur afl-2.39b.orig/qemu_mode/build_qemu_support.sh afl-2.39b/qemu_mode/build_qemu_support.sh
--- afl-2.39b.orig/qemu_mode/build_qemu_support.sh	2016-03-08 15:10:20.000000000 +0800
+++ afl-2.39b/qemu_mode/build_qemu_support.sh	2017-02-25 02:56:41.573333333 +0800
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/bin/bash
 #
 # american fuzzy lop - QEMU build script
 # --------------------------------------
@@ -22,13 +22,8 @@
 # will be written to ../afl-qemu-trace.
 #
 
-QEMU_URL="http://wiki.qemu-project.org/download/qemu-2.3.0.tar.bz2"
-QEMU_SHA384="7a0f0c900f7e2048463cc32ff3e904965ab466c8428847400a0f2dcfe458108a68012c4fddb2a7e7c822b4fd1a49639b"
-
-echo "================================================="
-echo "AFL binary-only instrumentation QEMU build script"
-echo "================================================="
-echo
+QEMU_URL="http://download.qemu-project.org/qemu-2.8.0.tar.xz"
+QEMU_SHA384="c305ec10747cb2a67f2435f20f37cb78ed59d8ab4e9d1c6e9b17fe8111fe462f8053b34f317af8526a8a4f4eda7b6481"
 
 echo "[*] Performing basic sanity checks..."
 
@@ -89,7 +84,7 @@
 
 if [ ! "$CKSUM" = "$QEMU_SHA384" ]; then
 
-  echo "[*] Downloading QEMU 2.3.0 from the web..."
+  echo "[*] Downloading QEMU 2.8.0 from the web..."
   rm -f "$ARCHIVE"
   wget -O "$ARCHIVE" -- "$QEMU_URL" || exit 1
 
@@ -110,36 +105,31 @@
 
 echo "[*] Uncompressing archive (this will take a while)..."
 
-rm -rf "qemu-2.3.0" || exit 1
-tar xf "$ARCHIVE" || exit 1
+rm -rf "qemu-2.8.0" || exit 1
+tar Jxf "$ARCHIVE" || exit 1
 
 echo "[+] Unpacking successful."
 
 echo "[*] Applying patches..."
 
-patch -p0 <patches/elfload.diff || exit 1
-patch -p0 <patches/cpu-exec.diff || exit 1
-patch -p0 <patches/translate-all.diff || exit 1
-patch -p0 <patches/syscall.diff || exit 1
+patch -p0 <patches/qemu-2.8.0.diff || exit 1
 
 echo "[+] Patching done."
 
-ORIG_CPU_TARGET="$CPU_TARGET"
-
-test "$CPU_TARGET" = "" && CPU_TARGET="`uname -m`"
-test "$CPU_TARGET" = "i686" && CPU_TARGET="i386"
+echo "[*] Configuring QEMU..."
 
-echo "[*] Configuring QEMU for $CPU_TARGET..."
+cd qemu-2.8.0 || exit 1
 
-cd qemu-2.3.0 || exit 1
+CC=gcc
+CXX=g++
 
-CFLAGS="-O3" ./configure --disable-system --enable-linux-user \
-  --enable-guest-base --disable-gtk --disable-sdl --disable-vnc \
-  --target-list="${CPU_TARGET}-linux-user" || exit 1
+CFLAGS="-O3" ./configure --python=/usr/bin/python2 --disable-system \
+  --enable-linux-user --disable-gtk --disable-sdl --disable-vnc \
+  --target-list="aarch64-linux-user armeb-linux-user arm-linux-user i386-linux-user mips64el-linux-user mips64-linux-user mipsel-linux-user mips-linux-user mipsn32el-linux-user mipsn32-linux-user ppc64abi32-linux-user ppc64le-linux-user ppc64-linux-user ppc-linux-user x86_64-linux-user" || exit 1
 
 echo "[+] Configuration complete."
 
-echo "[*] Attempting to build QEMU (fingers crossed!)..."
+echo "[*] Attempting to build QEMU..."
 
 make || exit 1
 
@@ -147,50 +137,47 @@
 
 echo "[*] Copying binary..."
 
-cp -f "${CPU_TARGET}-linux-user/qemu-${CPU_TARGET}" "../../afl-qemu-trace" || exit 1
+for CPU_TARGET in "aarch64" "armeb" "arm" "i386" "mips64el" "mips64" "mipsel" "mips" "mipsn32el" "mipsn32" "ppc64abi32" "ppc64le" "ppc64" "ppc" "x86_64"
+do
+  mkdir "../../afl-qemu-trace-${CPU_TARGET}"
+  cp -f "${CPU_TARGET}-linux-user/qemu-${CPU_TARGET}" "../../afl-qemu-trace-${CPU_TARGET}/afl-qemu-trace" || exit 1
+done
+
+cp -f "../../afl-qemu-trace-$(uname -m)/afl-qemu-trace" "../../afl-qemu-trace" || exit 1
 
 cd ..
-ls -l ../afl-qemu-trace || exit 1
+ls -l ../afl-qemu-trace* || exit 1
 
 echo "[+] Successfully created '../afl-qemu-trace'."
 
-if [ "$ORIG_CPU_TARGET" = "" ]; then
-
-  echo "[*] Testing the build..."
-
-  cd ..
-
-  make >/dev/null || exit 1
-
-  gcc test-instr.c -o test-instr || exit 1
+echo "[*] Testing the build..."
 
-  unset AFL_INST_RATIO
+cd ..
 
-  echo 0 | ./afl-showmap -m none -Q -q -o .test-instr0 ./test-instr || exit 1
-  echo 1 | ./afl-showmap -m none -Q -q -o .test-instr1 ./test-instr || exit 1
+make >/dev/null || exit 1
 
-  rm -f test-instr
+gcc test-instr.c -o test-instr || exit 1
 
-  cmp -s .test-instr0 .test-instr1
-  DR="$?"
+unset AFL_INST_RATIO
 
-  rm -f .test-instr0 .test-instr1
+echo 0 | ./afl-showmap -m none -Q -q -o .test-instr0 ./test-instr || exit 1
+echo 1 | ./afl-showmap -m none -Q -q -o .test-instr1 ./test-instr || exit 1
 
-  if [ "$DR" = "0" ]; then
+rm -f test-instr
 
-    echo "[-] Error: afl-qemu-trace instrumentation doesn't seem to work!"
-    exit 1
+cmp -s .test-instr0 .test-instr1
+DR="$?"
 
-  fi
+rm -f .test-instr0 .test-instr1
 
-  echo "[+] Instrumentation tests passed. "
-  echo "[+] All set, you can now use the -Q mode in afl-fuzz!"
+if [ "$DR" = "0" ]; then
 
-else
-
-  echo "[!] Note: can't test instrumentation when CPU_TARGET set."
-  echo "[+] All set, you can now (hopefully) use the -Q mode in afl-fuzz!"
+  echo "[-] Error: afl-qemu-trace instrumentation doesn't seem to work!"
+  exit 1
 
 fi
 
+echo "[+] Instrumentation tests passed. "
+echo "[+] All set, you can now use the -Q mode in afl-fuzz!"
+
 exit 0
diff -aur afl-2.39b.orig/qemu_mode/patches/afl-qemu-cpu-inl.h afl-2.39b/qemu_mode/patches/afl-qemu-cpu-inl.h
--- afl-2.39b.orig/qemu_mode/patches/afl-qemu-cpu-inl.h	2016-02-21 06:22:07.000000000 +0800
+++ afl-2.39b/qemu_mode/patches/afl-qemu-cpu-inl.h	2017-02-25 02:56:41.573333333 +0800
@@ -49,7 +49,7 @@
 #define AFL_QEMU_CPU_SNIPPET2 do { \
     if(tb->pc == afl_entry_point) { \
       afl_setup(); \
-      afl_forkserver(env); \
+      afl_forkserver(cpu->env_ptr); \
     } \
     afl_maybe_log(tb->pc); \
   } while (0)
@@ -81,14 +81,16 @@
 /* Function declarations. */
 
 static void afl_setup(void);
-static void afl_forkserver(CPUArchState*);
+static void afl_forkserver(CPUState*);
 static inline void afl_maybe_log(abi_ulong);
 
-static void afl_wait_tsl(CPUArchState*, int);
+static void afl_wait_tsl(CPUState*, int);
 static void afl_request_tsl(target_ulong, target_ulong, uint64_t);
 
-static TranslationBlock *tb_find_slow(CPUArchState*, target_ulong,
-                                      target_ulong, uint64_t);
+static TranslationBlock *tb_htable_lookup(CPUState *cpu,
+                                          target_ulong pc,
+                                          target_ulong cs_base,
+                                          uint32_t flags);
 
 
 /* Data structure passed around by the translate handlers: */
@@ -154,7 +156,7 @@
 
 /* Fork server logic, invoked once we hit _start. */
 
-static void afl_forkserver(CPUArchState *env) {
+static void afl_forkserver(CPUState *env) {
 
   static unsigned char tmp[4];
 
@@ -273,7 +275,7 @@
 /* This is the other side of the same channel. Since timeouts are handled by
    afl-fuzz simply killing the child, we can just wait until the pipe breaks. */
 
-static void afl_wait_tsl(CPUArchState *env, int fd) {
+static void afl_wait_tsl(CPUState *env, int fd) {
 
   struct afl_tsl t;
 
@@ -284,7 +286,7 @@
     if (read(fd, &t, sizeof(struct afl_tsl)) != sizeof(struct afl_tsl))
       break;
 
-    tb_find_slow(env, t.pc, t.cs_base, t.flags);
+    tb_htable_lookup(env, t.pc, t.cs_base, t.flags);
 
   }
 
diff -aur afl-2.39b.orig/types.h afl-2.39b/types.h
--- afl-2.39b.orig/types.h	2016-08-03 02:35:04.000000000 +0800
+++ afl-2.39b/types.h	2017-02-25 02:56:41.573333333 +0800
@@ -76,7 +76,9 @@
 #define MEM_BARRIER() \
   asm volatile("" ::: "memory")
 
+#ifndef likely
 #define likely(_x)   __builtin_expect(!!(_x), 1)
 #define unlikely(_x)  __builtin_expect(!!(_x), 0)
+#endif
 
 #endif /* ! _HAVE_TYPES_H */
